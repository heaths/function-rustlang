name: cd
on:
  push:
    branches:
      - main
    paths-ignore:
      - .github/CODEOWNERS
      - "**/*.md"

defaults:
  run:
    shell: bash

env:
  CARGO_INCREMENTAL: 1
  RUSTFLAGS: -Dwarnings

permissions:
  contents: read
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup
        # Install everything in rust-toolchain.toml and print versions.
        run: rustup show
      - name: Build
        run: |
          cargo build --release --target x86_64-unknown-linux-musl
          zip deploy.zip host.json hello/function.json target/x86_64-unknown-linux-musl/release/handler
      - name: Upload deployment artifact
        uses: actions/upload-artifact@v4
        with:
          name: deploy
          path: deploy.zip
          overwrite: true

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment: staging
    steps:
      - name: Download deployment artifact
        uses: actions/download-artifact@v4
        with:
          name: deploy
      - name: Log into staging environment
        uses: azure/login@v2
        with:
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
      - name: Deploy to staging environment
        id: stage
        run: |
          az functionapp deployment source config-zip --subscription "$AZURE_SUBSCRIPTION_ID" -g "$AZURE_RESOURCE_GROUP" -n "$AZURE_FUNCTIONAPP_NAME" --slot staging --src deploy.zip
          az functionapp show --subscription "$AZURE_SUBSCRIPTION_ID" -g "$AZURE_RESOURCE_GROUP" -n "$AZURE_FUNCTIONAPP_NAME" --slot staging --output json | jq -r '"AZURE_HOSTNAME=" + .defaultHostName' >> "$GITHUB_OUTPUT"
        env:
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          AZURE_RESOURCE_GROUP: ${{ secrets.AZURE_RESOURCE_GROUP }}
          AZURE_FUNCTIONAPP_NAME: ${{ secrets.AZURE_FUNCTIONAPP_NAME }}
      - name: Test staging environment
        run: |
          if [[ `curl --no-progress-meter --verbose "$AZURE_HOSTNAME/api/hello"` != 'Hello, world!' ]]; then
            exit 1
          fi
        env:
          AZURE_HOSTNAME: ${{ steps.stage.outputs.AZURE_HOSTNAME }}
